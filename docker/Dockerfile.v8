# Build v8 objects for the given target
FROM debian
ARG LLVM_VERSION
RUN <<DONE
	set -eux
	apt-get update
	apt-get install -y \
		build-essential \
		clang-$LLVM_VERSION \
		cmake \
		git \
		lld-$LLVM_VERSION \
		ninja-build \
		pkg-config \
	;
DONE
ENV LD_LIBRARY_PATH=/usr/lib/llvm-$LLVM_VERSION/lib/clang/$LLVM_VERSION/lib/linux:$LD_LIBRARY_PATH
ENV PATH=/lib/llvm-$LLVM_VERSION/bin:$PATH
COPY --from=isolated-vm/v8_sources v8 v8
COPY --from=patches . patches
COPY --from=scripts v8_build v8_select .
ARG REF TARGET
RUN <<DONE
	set -eux
	gclient config --unmanaged $(git -C v8 config --get remote.origin.url)
	cd v8
	PATCH_DIR=/patches /v8_select "$REF"
	CLANG_BASE_PATH=$(echo /lib/llvm-* | head -n1) /v8_build "out/$REF/$TARGET"
	rm -rf "out/$REF/$TARGET/gen"
	find out -type f ! -name env ! -name '*.so' ! -name '*.a' ! -name '*.h' -delete
	find out -type d -empty -delete
DONE

FROM scratch
COPY --from=build v8/out v8/out

#!/bin/sh
set -eu
PATCHES=$(find "$PATCH_DIR" -type f | sort -n)
V8_REF="$1"

# Checkout revision, sync dependencies
git checkout --detach "tags/$V8_REF"
if [ -z ${SKIP_SYNC+-} ]; then
	if [ "$(git rev-parse --is-shallow-repository)" = true ]; then
		gclient sync --no-history --shallow --with_branch_heads 1>&2
	else
		gclient sync --with_branch_heads 1>&2
	fi
fi

# Copy headers so building the module works even if we switch v8 checkout
mkdir -p "out/$V8_REF"
find include -name '*.h' -exec cp --parents --recursive {} "out/$V8_REF" \;

# Output revision
git describe --exact-match --tags || git rev-parse --short HEAD

# Apply patches
for PATCH in $PATCHES; do
	PATH_TO="$(dirname "$(realpath -s --relative-to="$PATCH_DIR" "$PATCH")")"
	patch -p1 -d"$PATH_TO" --batch < "$PATCH" 1>&2
	git -C "$PATH_TO" -c user.name=patches -c user.email='<>' commit --all --allow-empty --message="$PATCH" 1>&2
	git -C "$PATH_TO" diff HEAD~1 HEAD > "$PATCH"
done
